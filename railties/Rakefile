require 'rake'
require 'rake/testtask'
require 'rubygems/package_task'

require 'date'
require 'rbconfig'


task :default => :test
task :test => 'test:isolated'

## This is required until the regular test task
## below passes.  It's not ideal, but at least
## we can see the failures
namespace :test do
  task :isolated do
    dir = ENV["TEST_DIR"] || "**"
    Dir["test/#{dir}/*_test.rb"].each do |file|
      next true if file.include?("fixtures")
      ruby = File.join(*RbConfig::CONFIG.values_at('bindir', 'RUBY_INSTALL_NAME'))
      sh(ruby, '-Itest', "-I#{File.dirname(__FILE__)}/../activesupport/lib", file)
    end
  end
end

Rake::TestTask.new('test:regular') do |t|
  t.libs << 'test' << "#{File.dirname(__FILE__)}/../activesupport/lib"
  t.pattern = 'test/**/*_test.rb'
  t.warning = true
  t.verbose = true
end

# Update spinoffs -------------------------------------------------------------------

desc "Updates application README to the latest version Railties README"
task :update_readme do
  readme = "lib/rails/generators/rails/app/templates/README"
  rm readme
  cp "./README.rdoc", readme
end

desc 'Generate guides (for authors), use ONLY=foo to process just "foo.textile"'
task :generate_guides do
  ENV["WARN_BROKEN_LINKS"] = "1" # authors can't disable this
  ruby "guides/rails_guides.rb"
end

# Validate guides -------------------------------------------------------------------------
desc 'Validate guides, use ONLY=foo to process just "foo.html"'
task :validate_guides do
  ruby "guides/w3c_validator.rb"
end

# Generate GEM ----------------------------------------------------------------------------

spec = eval(File.read('railties.gemspec'))

Gem::PackageTask.new(spec) do |pkg|
  pkg.gem_spec = spec
end
